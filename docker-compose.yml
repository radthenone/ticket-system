networks:
  ticket-network:
    name: ticket-network
    driver: bridge

volumes:
  postgres_data:
  node_modules:

services:
  django:
    build:
      dockerfile: docker/backend/Dockerfile
      context: .
    stdin_open: true
    tty: true
    volumes:
      - ./backend/src:/src:z
    container_name: web
    env_file:
      - .envs/.django.env

    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
        restart: true
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health/"]
      interval: 1m30s
      timeout: 20s
      retries: 3
      start_period: 30s
    networks:
      - ticket-network
    profiles: ["dev", "backend"]

  db:
    image: postgres:16
    container_name: db
    env_file:
      - .envs/.db.env
    ports:
      - "5432:5432"
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U django_user -d django_db"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s
    networks:
      - ticket-network
    profiles: ["dev", "backend"]

  angular:
    container_name: front
    build:
      dockerfile: docker/frontend/Dockerfile
      context: .
    ports:
      - "3000:3000"
      - "49153:49153"
    volumes:
      - ./frontend:/app
      - node_modules:/app/node_modules
    environment:
      - NODE_ENV=development
    healthcheck:
      test: ["CMD", "curl", "--fail", "-G", "http://localhost:3000/ping/"]
      interval: 30s
      timeout: 10s
      retries: 30
    networks:
      - ticket-network
    profiles: ["dev", "frontend"]
